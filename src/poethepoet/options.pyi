from collections.abc import Mapping, Sequence
from typing import Any

NoValue: object

class PoeOptions:
    def __init__(self, **options: Any) -> None: ...
    def __getattribute__(self, name: str) -> Any: ...
    def __getattr__(self, name: str) -> Any: ...
    @classmethod
    def parse(
        cls, source: Mapping[str, Any] | list[Any], strict: bool = True, extra_keys: Sequence[str] = ...
    ) -> None: ...
    @classmethod
    def normalize(cls, config: Any, strict: bool = True) -> None: ...
    def validate(self) -> None: ...
    def get(self, key: str, default: Any = ...) -> Any: ...
    def update(self, options_dict: dict[str, Any]) -> None: ...
    @classmethod
    def type_of(cls, key: str) -> type | tuple[type, ...] | None: ...
    @classmethod
    def get_annotation(cls, key: str) -> type | None: ...
    @classmethod
    def get_fields(cls) -> dict[str, Any]: ...
