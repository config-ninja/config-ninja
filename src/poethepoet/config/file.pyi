from collections.abc import Iterator, Mapping, Sequence
from pathlib import Path
from typing import Any

from poethepoet.exceptions import PoeException as PoeException

class PoeConfigFile:
    path: Path
    def __init__(self, path: Path) -> None: ...
    @property
    def content(self) -> Mapping[str, Any] | None: ...
    @property
    def is_valid(self) -> bool: ...
    @property
    def error(self) -> PoeException | None: ...
    @property
    def is_pyproject(self) -> bool: ...
    def load(self, force: bool = False) -> Mapping[str, Any] | None: ...
    @classmethod
    def find_config_files(
        cls, target_path: Path, filenames: Sequence[str], search_parent: bool = True
    ) -> Iterator[PoeConfigFile]: ...
